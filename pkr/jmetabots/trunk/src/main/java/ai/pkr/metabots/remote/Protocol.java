// Generated by the protocol buffer compiler.  DO NOT EDIT!

package ai.pkr.metabots.remote;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Ak
      implements com.google.protobuf.ProtocolMessageEnum {
    b(0, 0),
    d(1, 1),
    f(2, 2),
    c(3, 3),
    r(4, 4),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static Ak valueOf(int value) {
      switch (value) {
        case 0: return b;
        case 1: return d;
        case 2: return f;
        case 3: return c;
        case 4: return r;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Ak>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Ak>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Ak>() {
            public Ak findValueByNumber(int number) {
              return Ak.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Ak[] VALUES = {
      b, d, f, c, r, 
    };
    public static Ak valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private Ak(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
  }
  
  public enum LimitKind
      implements com.google.protobuf.ProtocolMessageEnum {
    FixedLimit(0, 0),
    PotLimit(1, 1),
    NoLimit(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static LimitKind valueOf(int value) {
      switch (value) {
        case 0: return FixedLimit;
        case 1: return PotLimit;
        case 2: return NoLimit;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<LimitKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<LimitKind>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LimitKind>() {
            public LimitKind findValueByNumber(int number) {
              return LimitKind.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final LimitKind[] VALUES = {
      FixedLimit, PotLimit, NoLimit, 
    };
    public static LimitKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private LimitKind(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
  }
  
  public enum IPlayer_FunctionIDs
      implements com.google.protobuf.ProtocolMessageEnum {
    OnServerConnect(0, 1),
    OnServerDisconnect(1, 2),
    OnSessionBegin(2, 3),
    OnSessionEnd(3, 4),
    OnGameBegin(4, 5),
    OnGameUpdate(5, 6),
    OnActionRequired(6, 7),
    OnGameEnd(7, 8),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static IPlayer_FunctionIDs valueOf(int value) {
      switch (value) {
        case 1: return OnServerConnect;
        case 2: return OnServerDisconnect;
        case 3: return OnSessionBegin;
        case 4: return OnSessionEnd;
        case 5: return OnGameBegin;
        case 6: return OnGameUpdate;
        case 7: return OnActionRequired;
        case 8: return OnGameEnd;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<IPlayer_FunctionIDs>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<IPlayer_FunctionIDs>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IPlayer_FunctionIDs>() {
            public IPlayer_FunctionIDs findValueByNumber(int number) {
              return IPlayer_FunctionIDs.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final IPlayer_FunctionIDs[] VALUES = {
      OnServerConnect, OnServerDisconnect, OnSessionBegin, OnSessionEnd, OnGameBegin, OnGameUpdate, OnActionRequired, OnGameEnd, 
    };
    public static IPlayer_FunctionIDs valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private IPlayer_FunctionIDs(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
  }
  
  public static final class Props extends
      com.google.protobuf.GeneratedMessage {
    // Use Props.newBuilder() to construct.
    private Props() {}
    
    private static final Props defaultInstance = new Props();
    public static Props getDefaultInstance() {
      return defaultInstance;
    }
    
    public Props getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_Props_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_Props_fieldAccessorTable;
    }
    
    // repeated string Names = 1;
    public static final int NAMES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.String> names_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getNamesList() {
      return names_;
    }
    public int getNamesCount() { return names_.size(); }
    public java.lang.String getNames(int index) {
      return names_.get(index);
    }
    
    // repeated string Values = 2;
    public static final int VALUES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> values_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getValuesList() {
      return values_;
    }
    public int getValuesCount() { return values_.size(); }
    public java.lang.String getValues(int index) {
      return values_.get(index);
    }
    
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (java.lang.String element : getNamesList()) {
        output.writeString(1, element);
      }
      for (java.lang.String element : getValuesList()) {
        output.writeString(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (java.lang.String element : getNamesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getNamesList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getValuesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static ai.pkr.metabots.remote.Protocol.Props parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.Props parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.Props parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.Props parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.Props parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.Props parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.Props parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.Props parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.Props parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.Props parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ai.pkr.metabots.remote.Protocol.Props prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private ai.pkr.metabots.remote.Protocol.Props result;
      
      // Construct using ai.pkr.metabots.remote.Protocol.Props.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new ai.pkr.metabots.remote.Protocol.Props();
        return builder;
      }
      
      protected ai.pkr.metabots.remote.Protocol.Props internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new ai.pkr.metabots.remote.Protocol.Props();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ai.pkr.metabots.remote.Protocol.Props.getDescriptor();
      }
      
      public ai.pkr.metabots.remote.Protocol.Props getDefaultInstanceForType() {
        return ai.pkr.metabots.remote.Protocol.Props.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public ai.pkr.metabots.remote.Protocol.Props build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private ai.pkr.metabots.remote.Protocol.Props buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public ai.pkr.metabots.remote.Protocol.Props buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.names_ != java.util.Collections.EMPTY_LIST) {
          result.names_ =
            java.util.Collections.unmodifiableList(result.names_);
        }
        if (result.values_ != java.util.Collections.EMPTY_LIST) {
          result.values_ =
            java.util.Collections.unmodifiableList(result.values_);
        }
        ai.pkr.metabots.remote.Protocol.Props returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ai.pkr.metabots.remote.Protocol.Props) {
          return mergeFrom((ai.pkr.metabots.remote.Protocol.Props)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ai.pkr.metabots.remote.Protocol.Props other) {
        if (other == ai.pkr.metabots.remote.Protocol.Props.getDefaultInstance()) return this;
        if (!other.names_.isEmpty()) {
          if (result.names_.isEmpty()) {
            result.names_ = new java.util.ArrayList<java.lang.String>();
          }
          result.names_.addAll(other.names_);
        }
        if (!other.values_.isEmpty()) {
          if (result.values_.isEmpty()) {
            result.values_ = new java.util.ArrayList<java.lang.String>();
          }
          result.values_.addAll(other.values_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addNames(input.readString());
              break;
            }
            case 18: {
              addValues(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated string Names = 1;
      public java.util.List<java.lang.String> getNamesList() {
        return java.util.Collections.unmodifiableList(result.names_);
      }
      public int getNamesCount() {
        return result.getNamesCount();
      }
      public java.lang.String getNames(int index) {
        return result.getNames(index);
      }
      public Builder setNames(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.names_.set(index, value);
        return this;
      }
      public Builder addNames(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.names_.isEmpty()) {
          result.names_ = new java.util.ArrayList<java.lang.String>();
        }
        result.names_.add(value);
        return this;
      }
      public Builder addAllNames(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.names_.isEmpty()) {
          result.names_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.names_);
        return this;
      }
      public Builder clearNames() {
        result.names_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string Values = 2;
      public java.util.List<java.lang.String> getValuesList() {
        return java.util.Collections.unmodifiableList(result.values_);
      }
      public int getValuesCount() {
        return result.getValuesCount();
      }
      public java.lang.String getValues(int index) {
        return result.getValues(index);
      }
      public Builder setValues(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.values_.set(index, value);
        return this;
      }
      public Builder addValues(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<java.lang.String>();
        }
        result.values_.add(value);
        return this;
      }
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.values_);
        return this;
      }
      public Builder clearValues() {
        result.values_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.internalForceInit();
    }
  }
  
  public static final class PokerAction extends
      com.google.protobuf.GeneratedMessage {
    // Use PokerAction.newBuilder() to construct.
    private PokerAction() {}
    
    private static final PokerAction defaultInstance = new PokerAction();
    public static PokerAction getDefaultInstance() {
      return defaultInstance;
    }
    
    public PokerAction getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_PokerAction_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_PokerAction_fieldAccessorTable;
    }
    
    // required .ai.pkr.metabots.remote.Ak Kind = 1;
    public static final int KIND_FIELD_NUMBER = 1;
    private boolean hasKind;
    private ai.pkr.metabots.remote.Protocol.Ak kind_ = ai.pkr.metabots.remote.Protocol.Ak.b;
    public boolean hasKind() { return hasKind; }
    public ai.pkr.metabots.remote.Protocol.Ak getKind() { return kind_; }
    
    // required sint32 Position = 2;
    public static final int POSITION_FIELD_NUMBER = 2;
    private boolean hasPosition;
    private int position_ = 0;
    public boolean hasPosition() { return hasPosition; }
    public int getPosition() { return position_; }
    
    // required double Amount = 3;
    public static final int AMOUNT_FIELD_NUMBER = 3;
    private boolean hasAmount;
    private double amount_ = 0D;
    public boolean hasAmount() { return hasAmount; }
    public double getAmount() { return amount_; }
    
    // required string Cards = 4;
    public static final int CARDS_FIELD_NUMBER = 4;
    private boolean hasCards;
    private java.lang.String cards_ = "";
    public boolean hasCards() { return hasCards; }
    public java.lang.String getCards() { return cards_; }
    
    public final boolean isInitialized() {
      if (!hasKind) return false;
      if (!hasPosition) return false;
      if (!hasAmount) return false;
      if (!hasCards) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasKind()) {
        output.writeEnum(1, getKind().getNumber());
      }
      if (hasPosition()) {
        output.writeSInt32(2, getPosition());
      }
      if (hasAmount()) {
        output.writeDouble(3, getAmount());
      }
      if (hasCards()) {
        output.writeString(4, getCards());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasKind()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getKind().getNumber());
      }
      if (hasPosition()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getPosition());
      }
      if (hasAmount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, getAmount());
      }
      if (hasCards()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getCards());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PokerAction parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ai.pkr.metabots.remote.Protocol.PokerAction prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private ai.pkr.metabots.remote.Protocol.PokerAction result;
      
      // Construct using ai.pkr.metabots.remote.Protocol.PokerAction.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new ai.pkr.metabots.remote.Protocol.PokerAction();
        return builder;
      }
      
      protected ai.pkr.metabots.remote.Protocol.PokerAction internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new ai.pkr.metabots.remote.Protocol.PokerAction();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ai.pkr.metabots.remote.Protocol.PokerAction.getDescriptor();
      }
      
      public ai.pkr.metabots.remote.Protocol.PokerAction getDefaultInstanceForType() {
        return ai.pkr.metabots.remote.Protocol.PokerAction.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public ai.pkr.metabots.remote.Protocol.PokerAction build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private ai.pkr.metabots.remote.Protocol.PokerAction buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public ai.pkr.metabots.remote.Protocol.PokerAction buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        ai.pkr.metabots.remote.Protocol.PokerAction returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ai.pkr.metabots.remote.Protocol.PokerAction) {
          return mergeFrom((ai.pkr.metabots.remote.Protocol.PokerAction)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ai.pkr.metabots.remote.Protocol.PokerAction other) {
        if (other == ai.pkr.metabots.remote.Protocol.PokerAction.getDefaultInstance()) return this;
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasPosition()) {
          setPosition(other.getPosition());
        }
        if (other.hasAmount()) {
          setAmount(other.getAmount());
        }
        if (other.hasCards()) {
          setCards(other.getCards());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              ai.pkr.metabots.remote.Protocol.Ak value = ai.pkr.metabots.remote.Protocol.Ak.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setKind(value);
              }
              break;
            }
            case 16: {
              setPosition(input.readSInt32());
              break;
            }
            case 25: {
              setAmount(input.readDouble());
              break;
            }
            case 34: {
              setCards(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .ai.pkr.metabots.remote.Ak Kind = 1;
      public boolean hasKind() {
        return result.hasKind();
      }
      public ai.pkr.metabots.remote.Protocol.Ak getKind() {
        return result.getKind();
      }
      public Builder setKind(ai.pkr.metabots.remote.Protocol.Ak value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasKind = true;
        result.kind_ = value;
        return this;
      }
      public Builder clearKind() {
        result.hasKind = false;
        result.kind_ = ai.pkr.metabots.remote.Protocol.Ak.b;
        return this;
      }
      
      // required sint32 Position = 2;
      public boolean hasPosition() {
        return result.hasPosition();
      }
      public int getPosition() {
        return result.getPosition();
      }
      public Builder setPosition(int value) {
        result.hasPosition = true;
        result.position_ = value;
        return this;
      }
      public Builder clearPosition() {
        result.hasPosition = false;
        result.position_ = 0;
        return this;
      }
      
      // required double Amount = 3;
      public boolean hasAmount() {
        return result.hasAmount();
      }
      public double getAmount() {
        return result.getAmount();
      }
      public Builder setAmount(double value) {
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder clearAmount() {
        result.hasAmount = false;
        result.amount_ = 0D;
        return this;
      }
      
      // required string Cards = 4;
      public boolean hasCards() {
        return result.hasCards();
      }
      public java.lang.String getCards() {
        return result.getCards();
      }
      public Builder setCards(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCards = true;
        result.cards_ = value;
        return this;
      }
      public Builder clearCards() {
        result.hasCards = false;
        result.cards_ = getDefaultInstance().getCards();
        return this;
      }
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.internalForceInit();
    }
  }
  
  public static final class DeckDescriptor extends
      com.google.protobuf.GeneratedMessage {
    // Use DeckDescriptor.newBuilder() to construct.
    private DeckDescriptor() {}
    
    private static final DeckDescriptor defaultInstance = new DeckDescriptor();
    public static DeckDescriptor getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeckDescriptor getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_DeckDescriptor_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_DeckDescriptor_fieldAccessorTable;
    }
    
    // required string Name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // repeated string CardNames = 2;
    public static final int CARDNAMES_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> cardNames_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getCardNamesList() {
      return cardNames_;
    }
    public int getCardNamesCount() { return cardNames_.size(); }
    public java.lang.String getCardNames(int index) {
      return cardNames_.get(index);
    }
    
    // repeated uint64 CardSets = 3;
    public static final int CARDSETS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> cardSets_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Long> getCardSetsList() {
      return cardSets_;
    }
    public int getCardSetsCount() { return cardSets_.size(); }
    public long getCardSets(int index) {
      return cardSets_.get(index);
    }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      for (java.lang.String element : getCardNamesList()) {
        output.writeString(2, element);
      }
      for (long element : getCardSetsList()) {
        output.writeUInt64(3, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getCardNamesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCardNamesList().size();
      }
      {
        int dataSize = 0;
        for (long element : getCardSetsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getCardSetsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.DeckDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ai.pkr.metabots.remote.Protocol.DeckDescriptor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private ai.pkr.metabots.remote.Protocol.DeckDescriptor result;
      
      // Construct using ai.pkr.metabots.remote.Protocol.DeckDescriptor.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new ai.pkr.metabots.remote.Protocol.DeckDescriptor();
        return builder;
      }
      
      protected ai.pkr.metabots.remote.Protocol.DeckDescriptor internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new ai.pkr.metabots.remote.Protocol.DeckDescriptor();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ai.pkr.metabots.remote.Protocol.DeckDescriptor.getDescriptor();
      }
      
      public ai.pkr.metabots.remote.Protocol.DeckDescriptor getDefaultInstanceForType() {
        return ai.pkr.metabots.remote.Protocol.DeckDescriptor.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public ai.pkr.metabots.remote.Protocol.DeckDescriptor build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private ai.pkr.metabots.remote.Protocol.DeckDescriptor buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public ai.pkr.metabots.remote.Protocol.DeckDescriptor buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.cardNames_ != java.util.Collections.EMPTY_LIST) {
          result.cardNames_ =
            java.util.Collections.unmodifiableList(result.cardNames_);
        }
        if (result.cardSets_ != java.util.Collections.EMPTY_LIST) {
          result.cardSets_ =
            java.util.Collections.unmodifiableList(result.cardSets_);
        }
        ai.pkr.metabots.remote.Protocol.DeckDescriptor returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ai.pkr.metabots.remote.Protocol.DeckDescriptor) {
          return mergeFrom((ai.pkr.metabots.remote.Protocol.DeckDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ai.pkr.metabots.remote.Protocol.DeckDescriptor other) {
        if (other == ai.pkr.metabots.remote.Protocol.DeckDescriptor.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (!other.cardNames_.isEmpty()) {
          if (result.cardNames_.isEmpty()) {
            result.cardNames_ = new java.util.ArrayList<java.lang.String>();
          }
          result.cardNames_.addAll(other.cardNames_);
        }
        if (!other.cardSets_.isEmpty()) {
          if (result.cardSets_.isEmpty()) {
            result.cardSets_ = new java.util.ArrayList<java.lang.Long>();
          }
          result.cardSets_.addAll(other.cardSets_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 18: {
              addCardNames(input.readString());
              break;
            }
            case 24: {
              addCardSets(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required string Name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated string CardNames = 2;
      public java.util.List<java.lang.String> getCardNamesList() {
        return java.util.Collections.unmodifiableList(result.cardNames_);
      }
      public int getCardNamesCount() {
        return result.getCardNamesCount();
      }
      public java.lang.String getCardNames(int index) {
        return result.getCardNames(index);
      }
      public Builder setCardNames(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.cardNames_.set(index, value);
        return this;
      }
      public Builder addCardNames(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.cardNames_.isEmpty()) {
          result.cardNames_ = new java.util.ArrayList<java.lang.String>();
        }
        result.cardNames_.add(value);
        return this;
      }
      public Builder addAllCardNames(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.cardNames_.isEmpty()) {
          result.cardNames_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.cardNames_);
        return this;
      }
      public Builder clearCardNames() {
        result.cardNames_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated uint64 CardSets = 3;
      public java.util.List<java.lang.Long> getCardSetsList() {
        return java.util.Collections.unmodifiableList(result.cardSets_);
      }
      public int getCardSetsCount() {
        return result.getCardSetsCount();
      }
      public long getCardSets(int index) {
        return result.getCardSets(index);
      }
      public Builder setCardSets(int index, long value) {
        result.cardSets_.set(index, value);
        return this;
      }
      public Builder addCardSets(long value) {
        if (result.cardSets_.isEmpty()) {
          result.cardSets_ = new java.util.ArrayList<java.lang.Long>();
        }
        result.cardSets_.add(value);
        return this;
      }
      public Builder addAllCardSets(
          java.lang.Iterable<? extends java.lang.Long> values) {
        if (result.cardSets_.isEmpty()) {
          result.cardSets_ = new java.util.ArrayList<java.lang.Long>();
        }
        super.addAll(values, result.cardSets_);
        return this;
      }
      public Builder clearCardSets() {
        result.cardSets_ = java.util.Collections.emptyList();
        return this;
      }
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.internalForceInit();
    }
  }
  
  public static final class GameDefinition extends
      com.google.protobuf.GeneratedMessage {
    // Use GameDefinition.newBuilder() to construct.
    private GameDefinition() {}
    
    private static final GameDefinition defaultInstance = new GameDefinition();
    public static GameDefinition getDefaultInstance() {
      return defaultInstance;
    }
    
    public GameDefinition getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_GameDefinition_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_GameDefinition_fieldAccessorTable;
    }
    
    // required string Name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // required sint32 RoundsCount = 2;
    public static final int ROUNDSCOUNT_FIELD_NUMBER = 2;
    private boolean hasRoundsCount;
    private int roundsCount_ = 0;
    public boolean hasRoundsCount() { return hasRoundsCount; }
    public int getRoundsCount() { return roundsCount_; }
    
    // required sint32 MinPlayers = 3;
    public static final int MINPLAYERS_FIELD_NUMBER = 3;
    private boolean hasMinPlayers;
    private int minPlayers_ = 0;
    public boolean hasMinPlayers() { return hasMinPlayers; }
    public int getMinPlayers() { return minPlayers_; }
    
    // required sint32 MaxPlayers = 4;
    public static final int MAXPLAYERS_FIELD_NUMBER = 4;
    private boolean hasMaxPlayers;
    private int maxPlayers_ = 0;
    public boolean hasMaxPlayers() { return hasMaxPlayers; }
    public int getMaxPlayers() { return maxPlayers_; }
    
    // repeated double BetStructure = 5;
    public static final int BETSTRUCTURE_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Double> betStructure_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getBetStructureList() {
      return betStructure_;
    }
    public int getBetStructureCount() { return betStructure_.size(); }
    public double getBetStructure(int index) {
      return betStructure_.get(index);
    }
    
    // repeated double BlindStructure = 6;
    public static final int BLINDSTRUCTURE_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Double> blindStructure_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getBlindStructureList() {
      return blindStructure_;
    }
    public int getBlindStructureCount() { return blindStructure_.size(); }
    public double getBlindStructure(int index) {
      return blindStructure_.get(index);
    }
    
    // repeated sint32 PrivateCardsCount = 7;
    public static final int PRIVATECARDSCOUNT_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> privateCardsCount_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getPrivateCardsCountList() {
      return privateCardsCount_;
    }
    public int getPrivateCardsCountCount() { return privateCardsCount_.size(); }
    public int getPrivateCardsCount(int index) {
      return privateCardsCount_.get(index);
    }
    
    // repeated sint32 PublicCardsCount = 8;
    public static final int PUBLICCARDSCOUNT_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> publicCardsCount_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getPublicCardsCountList() {
      return publicCardsCount_;
    }
    public int getPublicCardsCountCount() { return publicCardsCount_.size(); }
    public int getPublicCardsCount(int index) {
      return publicCardsCount_.get(index);
    }
    
    // repeated sint32 SharedCardsCount = 9;
    public static final int SHAREDCARDSCOUNT_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> sharedCardsCount_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getSharedCardsCountList() {
      return sharedCardsCount_;
    }
    public int getSharedCardsCountCount() { return sharedCardsCount_.size(); }
    public int getSharedCardsCount(int index) {
      return sharedCardsCount_.get(index);
    }
    
    // repeated sint32 BetsCountLimits = 10;
    public static final int BETSCOUNTLIMITS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> betsCountLimits_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getBetsCountLimitsList() {
      return betsCountLimits_;
    }
    public int getBetsCountLimitsCount() { return betsCountLimits_.size(); }
    public int getBetsCountLimits(int index) {
      return betsCountLimits_.get(index);
    }
    
    // repeated sint32 FirstActor = 11;
    public static final int FIRSTACTOR_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> firstActor_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getFirstActorList() {
      return firstActor_;
    }
    public int getFirstActorCount() { return firstActor_.size(); }
    public int getFirstActor(int index) {
      return firstActor_.get(index);
    }
    
    // repeated sint32 FirstActorHeadsUp = 12;
    public static final int FIRSTACTORHEADSUP_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> firstActorHeadsUp_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getFirstActorHeadsUpList() {
      return firstActorHeadsUp_;
    }
    public int getFirstActorHeadsUpCount() { return firstActorHeadsUp_.size(); }
    public int getFirstActorHeadsUp(int index) {
      return firstActorHeadsUp_.get(index);
    }
    
    // required .ai.pkr.metabots.remote.LimitKind LimitKind = 13;
    public static final int LIMITKIND_FIELD_NUMBER = 13;
    private boolean hasLimitKind;
    private ai.pkr.metabots.remote.Protocol.LimitKind limitKind_ = ai.pkr.metabots.remote.Protocol.LimitKind.FixedLimit;
    public boolean hasLimitKind() { return hasLimitKind; }
    public ai.pkr.metabots.remote.Protocol.LimitKind getLimitKind() { return limitKind_; }
    
    // required .ai.pkr.metabots.remote.DeckDescriptor DeckDescriptor = 14;
    public static final int DECKDESCRIPTOR_FIELD_NUMBER = 14;
    private boolean hasDeckDescriptor;
    private ai.pkr.metabots.remote.Protocol.DeckDescriptor deckDescriptor_ = ai.pkr.metabots.remote.Protocol.DeckDescriptor.getDefaultInstance();
    public boolean hasDeckDescriptor() { return hasDeckDescriptor; }
    public ai.pkr.metabots.remote.Protocol.DeckDescriptor getDeckDescriptor() { return deckDescriptor_; }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      if (!hasRoundsCount) return false;
      if (!hasMinPlayers) return false;
      if (!hasMaxPlayers) return false;
      if (!hasLimitKind) return false;
      if (!hasDeckDescriptor) return false;
      if (!getDeckDescriptor().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      if (hasRoundsCount()) {
        output.writeSInt32(2, getRoundsCount());
      }
      if (hasMinPlayers()) {
        output.writeSInt32(3, getMinPlayers());
      }
      if (hasMaxPlayers()) {
        output.writeSInt32(4, getMaxPlayers());
      }
      for (double element : getBetStructureList()) {
        output.writeDouble(5, element);
      }
      for (double element : getBlindStructureList()) {
        output.writeDouble(6, element);
      }
      for (int element : getPrivateCardsCountList()) {
        output.writeSInt32(7, element);
      }
      for (int element : getPublicCardsCountList()) {
        output.writeSInt32(8, element);
      }
      for (int element : getSharedCardsCountList()) {
        output.writeSInt32(9, element);
      }
      for (int element : getBetsCountLimitsList()) {
        output.writeSInt32(10, element);
      }
      for (int element : getFirstActorList()) {
        output.writeSInt32(11, element);
      }
      for (int element : getFirstActorHeadsUpList()) {
        output.writeSInt32(12, element);
      }
      if (hasLimitKind()) {
        output.writeEnum(13, getLimitKind().getNumber());
      }
      if (hasDeckDescriptor()) {
        output.writeMessage(14, getDeckDescriptor());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      if (hasRoundsCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getRoundsCount());
      }
      if (hasMinPlayers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, getMinPlayers());
      }
      if (hasMaxPlayers()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, getMaxPlayers());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getBetStructureList().size();
        size += dataSize;
        size += 1 * getBetStructureList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getBlindStructureList().size();
        size += dataSize;
        size += 1 * getBlindStructureList().size();
      }
      {
        int dataSize = 0;
        for (int element : getPrivateCardsCountList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPrivateCardsCountList().size();
      }
      {
        int dataSize = 0;
        for (int element : getPublicCardsCountList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPublicCardsCountList().size();
      }
      {
        int dataSize = 0;
        for (int element : getSharedCardsCountList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getSharedCardsCountList().size();
      }
      {
        int dataSize = 0;
        for (int element : getBetsCountLimitsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getBetsCountLimitsList().size();
      }
      {
        int dataSize = 0;
        for (int element : getFirstActorList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getFirstActorList().size();
      }
      {
        int dataSize = 0;
        for (int element : getFirstActorHeadsUpList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getFirstActorHeadsUpList().size();
      }
      if (hasLimitKind()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, getLimitKind().getNumber());
      }
      if (hasDeckDescriptor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getDeckDescriptor());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.GameDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ai.pkr.metabots.remote.Protocol.GameDefinition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private ai.pkr.metabots.remote.Protocol.GameDefinition result;
      
      // Construct using ai.pkr.metabots.remote.Protocol.GameDefinition.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new ai.pkr.metabots.remote.Protocol.GameDefinition();
        return builder;
      }
      
      protected ai.pkr.metabots.remote.Protocol.GameDefinition internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new ai.pkr.metabots.remote.Protocol.GameDefinition();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ai.pkr.metabots.remote.Protocol.GameDefinition.getDescriptor();
      }
      
      public ai.pkr.metabots.remote.Protocol.GameDefinition getDefaultInstanceForType() {
        return ai.pkr.metabots.remote.Protocol.GameDefinition.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public ai.pkr.metabots.remote.Protocol.GameDefinition build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private ai.pkr.metabots.remote.Protocol.GameDefinition buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public ai.pkr.metabots.remote.Protocol.GameDefinition buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.betStructure_ != java.util.Collections.EMPTY_LIST) {
          result.betStructure_ =
            java.util.Collections.unmodifiableList(result.betStructure_);
        }
        if (result.blindStructure_ != java.util.Collections.EMPTY_LIST) {
          result.blindStructure_ =
            java.util.Collections.unmodifiableList(result.blindStructure_);
        }
        if (result.privateCardsCount_ != java.util.Collections.EMPTY_LIST) {
          result.privateCardsCount_ =
            java.util.Collections.unmodifiableList(result.privateCardsCount_);
        }
        if (result.publicCardsCount_ != java.util.Collections.EMPTY_LIST) {
          result.publicCardsCount_ =
            java.util.Collections.unmodifiableList(result.publicCardsCount_);
        }
        if (result.sharedCardsCount_ != java.util.Collections.EMPTY_LIST) {
          result.sharedCardsCount_ =
            java.util.Collections.unmodifiableList(result.sharedCardsCount_);
        }
        if (result.betsCountLimits_ != java.util.Collections.EMPTY_LIST) {
          result.betsCountLimits_ =
            java.util.Collections.unmodifiableList(result.betsCountLimits_);
        }
        if (result.firstActor_ != java.util.Collections.EMPTY_LIST) {
          result.firstActor_ =
            java.util.Collections.unmodifiableList(result.firstActor_);
        }
        if (result.firstActorHeadsUp_ != java.util.Collections.EMPTY_LIST) {
          result.firstActorHeadsUp_ =
            java.util.Collections.unmodifiableList(result.firstActorHeadsUp_);
        }
        ai.pkr.metabots.remote.Protocol.GameDefinition returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ai.pkr.metabots.remote.Protocol.GameDefinition) {
          return mergeFrom((ai.pkr.metabots.remote.Protocol.GameDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ai.pkr.metabots.remote.Protocol.GameDefinition other) {
        if (other == ai.pkr.metabots.remote.Protocol.GameDefinition.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasRoundsCount()) {
          setRoundsCount(other.getRoundsCount());
        }
        if (other.hasMinPlayers()) {
          setMinPlayers(other.getMinPlayers());
        }
        if (other.hasMaxPlayers()) {
          setMaxPlayers(other.getMaxPlayers());
        }
        if (!other.betStructure_.isEmpty()) {
          if (result.betStructure_.isEmpty()) {
            result.betStructure_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.betStructure_.addAll(other.betStructure_);
        }
        if (!other.blindStructure_.isEmpty()) {
          if (result.blindStructure_.isEmpty()) {
            result.blindStructure_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.blindStructure_.addAll(other.blindStructure_);
        }
        if (!other.privateCardsCount_.isEmpty()) {
          if (result.privateCardsCount_.isEmpty()) {
            result.privateCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.privateCardsCount_.addAll(other.privateCardsCount_);
        }
        if (!other.publicCardsCount_.isEmpty()) {
          if (result.publicCardsCount_.isEmpty()) {
            result.publicCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.publicCardsCount_.addAll(other.publicCardsCount_);
        }
        if (!other.sharedCardsCount_.isEmpty()) {
          if (result.sharedCardsCount_.isEmpty()) {
            result.sharedCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.sharedCardsCount_.addAll(other.sharedCardsCount_);
        }
        if (!other.betsCountLimits_.isEmpty()) {
          if (result.betsCountLimits_.isEmpty()) {
            result.betsCountLimits_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.betsCountLimits_.addAll(other.betsCountLimits_);
        }
        if (!other.firstActor_.isEmpty()) {
          if (result.firstActor_.isEmpty()) {
            result.firstActor_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.firstActor_.addAll(other.firstActor_);
        }
        if (!other.firstActorHeadsUp_.isEmpty()) {
          if (result.firstActorHeadsUp_.isEmpty()) {
            result.firstActorHeadsUp_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.firstActorHeadsUp_.addAll(other.firstActorHeadsUp_);
        }
        if (other.hasLimitKind()) {
          setLimitKind(other.getLimitKind());
        }
        if (other.hasDeckDescriptor()) {
          mergeDeckDescriptor(other.getDeckDescriptor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
            case 16: {
              setRoundsCount(input.readSInt32());
              break;
            }
            case 24: {
              setMinPlayers(input.readSInt32());
              break;
            }
            case 32: {
              setMaxPlayers(input.readSInt32());
              break;
            }
            case 41: {
              addBetStructure(input.readDouble());
              break;
            }
            case 49: {
              addBlindStructure(input.readDouble());
              break;
            }
            case 56: {
              addPrivateCardsCount(input.readSInt32());
              break;
            }
            case 64: {
              addPublicCardsCount(input.readSInt32());
              break;
            }
            case 72: {
              addSharedCardsCount(input.readSInt32());
              break;
            }
            case 80: {
              addBetsCountLimits(input.readSInt32());
              break;
            }
            case 88: {
              addFirstActor(input.readSInt32());
              break;
            }
            case 96: {
              addFirstActorHeadsUp(input.readSInt32());
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              ai.pkr.metabots.remote.Protocol.LimitKind value = ai.pkr.metabots.remote.Protocol.LimitKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                setLimitKind(value);
              }
              break;
            }
            case 114: {
              ai.pkr.metabots.remote.Protocol.DeckDescriptor.Builder subBuilder = ai.pkr.metabots.remote.Protocol.DeckDescriptor.newBuilder();
              if (hasDeckDescriptor()) {
                subBuilder.mergeFrom(getDeckDescriptor());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDeckDescriptor(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string Name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // required sint32 RoundsCount = 2;
      public boolean hasRoundsCount() {
        return result.hasRoundsCount();
      }
      public int getRoundsCount() {
        return result.getRoundsCount();
      }
      public Builder setRoundsCount(int value) {
        result.hasRoundsCount = true;
        result.roundsCount_ = value;
        return this;
      }
      public Builder clearRoundsCount() {
        result.hasRoundsCount = false;
        result.roundsCount_ = 0;
        return this;
      }
      
      // required sint32 MinPlayers = 3;
      public boolean hasMinPlayers() {
        return result.hasMinPlayers();
      }
      public int getMinPlayers() {
        return result.getMinPlayers();
      }
      public Builder setMinPlayers(int value) {
        result.hasMinPlayers = true;
        result.minPlayers_ = value;
        return this;
      }
      public Builder clearMinPlayers() {
        result.hasMinPlayers = false;
        result.minPlayers_ = 0;
        return this;
      }
      
      // required sint32 MaxPlayers = 4;
      public boolean hasMaxPlayers() {
        return result.hasMaxPlayers();
      }
      public int getMaxPlayers() {
        return result.getMaxPlayers();
      }
      public Builder setMaxPlayers(int value) {
        result.hasMaxPlayers = true;
        result.maxPlayers_ = value;
        return this;
      }
      public Builder clearMaxPlayers() {
        result.hasMaxPlayers = false;
        result.maxPlayers_ = 0;
        return this;
      }
      
      // repeated double BetStructure = 5;
      public java.util.List<java.lang.Double> getBetStructureList() {
        return java.util.Collections.unmodifiableList(result.betStructure_);
      }
      public int getBetStructureCount() {
        return result.getBetStructureCount();
      }
      public double getBetStructure(int index) {
        return result.getBetStructure(index);
      }
      public Builder setBetStructure(int index, double value) {
        result.betStructure_.set(index, value);
        return this;
      }
      public Builder addBetStructure(double value) {
        if (result.betStructure_.isEmpty()) {
          result.betStructure_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.betStructure_.add(value);
        return this;
      }
      public Builder addAllBetStructure(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.betStructure_.isEmpty()) {
          result.betStructure_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.betStructure_);
        return this;
      }
      public Builder clearBetStructure() {
        result.betStructure_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated double BlindStructure = 6;
      public java.util.List<java.lang.Double> getBlindStructureList() {
        return java.util.Collections.unmodifiableList(result.blindStructure_);
      }
      public int getBlindStructureCount() {
        return result.getBlindStructureCount();
      }
      public double getBlindStructure(int index) {
        return result.getBlindStructure(index);
      }
      public Builder setBlindStructure(int index, double value) {
        result.blindStructure_.set(index, value);
        return this;
      }
      public Builder addBlindStructure(double value) {
        if (result.blindStructure_.isEmpty()) {
          result.blindStructure_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.blindStructure_.add(value);
        return this;
      }
      public Builder addAllBlindStructure(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.blindStructure_.isEmpty()) {
          result.blindStructure_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.blindStructure_);
        return this;
      }
      public Builder clearBlindStructure() {
        result.blindStructure_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated sint32 PrivateCardsCount = 7;
      public java.util.List<java.lang.Integer> getPrivateCardsCountList() {
        return java.util.Collections.unmodifiableList(result.privateCardsCount_);
      }
      public int getPrivateCardsCountCount() {
        return result.getPrivateCardsCountCount();
      }
      public int getPrivateCardsCount(int index) {
        return result.getPrivateCardsCount(index);
      }
      public Builder setPrivateCardsCount(int index, int value) {
        result.privateCardsCount_.set(index, value);
        return this;
      }
      public Builder addPrivateCardsCount(int value) {
        if (result.privateCardsCount_.isEmpty()) {
          result.privateCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.privateCardsCount_.add(value);
        return this;
      }
      public Builder addAllPrivateCardsCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.privateCardsCount_.isEmpty()) {
          result.privateCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.privateCardsCount_);
        return this;
      }
      public Builder clearPrivateCardsCount() {
        result.privateCardsCount_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated sint32 PublicCardsCount = 8;
      public java.util.List<java.lang.Integer> getPublicCardsCountList() {
        return java.util.Collections.unmodifiableList(result.publicCardsCount_);
      }
      public int getPublicCardsCountCount() {
        return result.getPublicCardsCountCount();
      }
      public int getPublicCardsCount(int index) {
        return result.getPublicCardsCount(index);
      }
      public Builder setPublicCardsCount(int index, int value) {
        result.publicCardsCount_.set(index, value);
        return this;
      }
      public Builder addPublicCardsCount(int value) {
        if (result.publicCardsCount_.isEmpty()) {
          result.publicCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.publicCardsCount_.add(value);
        return this;
      }
      public Builder addAllPublicCardsCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.publicCardsCount_.isEmpty()) {
          result.publicCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.publicCardsCount_);
        return this;
      }
      public Builder clearPublicCardsCount() {
        result.publicCardsCount_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated sint32 SharedCardsCount = 9;
      public java.util.List<java.lang.Integer> getSharedCardsCountList() {
        return java.util.Collections.unmodifiableList(result.sharedCardsCount_);
      }
      public int getSharedCardsCountCount() {
        return result.getSharedCardsCountCount();
      }
      public int getSharedCardsCount(int index) {
        return result.getSharedCardsCount(index);
      }
      public Builder setSharedCardsCount(int index, int value) {
        result.sharedCardsCount_.set(index, value);
        return this;
      }
      public Builder addSharedCardsCount(int value) {
        if (result.sharedCardsCount_.isEmpty()) {
          result.sharedCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.sharedCardsCount_.add(value);
        return this;
      }
      public Builder addAllSharedCardsCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.sharedCardsCount_.isEmpty()) {
          result.sharedCardsCount_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.sharedCardsCount_);
        return this;
      }
      public Builder clearSharedCardsCount() {
        result.sharedCardsCount_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated sint32 BetsCountLimits = 10;
      public java.util.List<java.lang.Integer> getBetsCountLimitsList() {
        return java.util.Collections.unmodifiableList(result.betsCountLimits_);
      }
      public int getBetsCountLimitsCount() {
        return result.getBetsCountLimitsCount();
      }
      public int getBetsCountLimits(int index) {
        return result.getBetsCountLimits(index);
      }
      public Builder setBetsCountLimits(int index, int value) {
        result.betsCountLimits_.set(index, value);
        return this;
      }
      public Builder addBetsCountLimits(int value) {
        if (result.betsCountLimits_.isEmpty()) {
          result.betsCountLimits_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.betsCountLimits_.add(value);
        return this;
      }
      public Builder addAllBetsCountLimits(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.betsCountLimits_.isEmpty()) {
          result.betsCountLimits_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.betsCountLimits_);
        return this;
      }
      public Builder clearBetsCountLimits() {
        result.betsCountLimits_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated sint32 FirstActor = 11;
      public java.util.List<java.lang.Integer> getFirstActorList() {
        return java.util.Collections.unmodifiableList(result.firstActor_);
      }
      public int getFirstActorCount() {
        return result.getFirstActorCount();
      }
      public int getFirstActor(int index) {
        return result.getFirstActor(index);
      }
      public Builder setFirstActor(int index, int value) {
        result.firstActor_.set(index, value);
        return this;
      }
      public Builder addFirstActor(int value) {
        if (result.firstActor_.isEmpty()) {
          result.firstActor_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.firstActor_.add(value);
        return this;
      }
      public Builder addAllFirstActor(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.firstActor_.isEmpty()) {
          result.firstActor_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.firstActor_);
        return this;
      }
      public Builder clearFirstActor() {
        result.firstActor_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated sint32 FirstActorHeadsUp = 12;
      public java.util.List<java.lang.Integer> getFirstActorHeadsUpList() {
        return java.util.Collections.unmodifiableList(result.firstActorHeadsUp_);
      }
      public int getFirstActorHeadsUpCount() {
        return result.getFirstActorHeadsUpCount();
      }
      public int getFirstActorHeadsUp(int index) {
        return result.getFirstActorHeadsUp(index);
      }
      public Builder setFirstActorHeadsUp(int index, int value) {
        result.firstActorHeadsUp_.set(index, value);
        return this;
      }
      public Builder addFirstActorHeadsUp(int value) {
        if (result.firstActorHeadsUp_.isEmpty()) {
          result.firstActorHeadsUp_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.firstActorHeadsUp_.add(value);
        return this;
      }
      public Builder addAllFirstActorHeadsUp(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.firstActorHeadsUp_.isEmpty()) {
          result.firstActorHeadsUp_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.firstActorHeadsUp_);
        return this;
      }
      public Builder clearFirstActorHeadsUp() {
        result.firstActorHeadsUp_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required .ai.pkr.metabots.remote.LimitKind LimitKind = 13;
      public boolean hasLimitKind() {
        return result.hasLimitKind();
      }
      public ai.pkr.metabots.remote.Protocol.LimitKind getLimitKind() {
        return result.getLimitKind();
      }
      public Builder setLimitKind(ai.pkr.metabots.remote.Protocol.LimitKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLimitKind = true;
        result.limitKind_ = value;
        return this;
      }
      public Builder clearLimitKind() {
        result.hasLimitKind = false;
        result.limitKind_ = ai.pkr.metabots.remote.Protocol.LimitKind.FixedLimit;
        return this;
      }
      
      // required .ai.pkr.metabots.remote.DeckDescriptor DeckDescriptor = 14;
      public boolean hasDeckDescriptor() {
        return result.hasDeckDescriptor();
      }
      public ai.pkr.metabots.remote.Protocol.DeckDescriptor getDeckDescriptor() {
        return result.getDeckDescriptor();
      }
      public Builder setDeckDescriptor(ai.pkr.metabots.remote.Protocol.DeckDescriptor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDeckDescriptor = true;
        result.deckDescriptor_ = value;
        return this;
      }
      public Builder setDeckDescriptor(ai.pkr.metabots.remote.Protocol.DeckDescriptor.Builder builderForValue) {
        result.hasDeckDescriptor = true;
        result.deckDescriptor_ = builderForValue.build();
        return this;
      }
      public Builder mergeDeckDescriptor(ai.pkr.metabots.remote.Protocol.DeckDescriptor value) {
        if (result.hasDeckDescriptor() &&
            result.deckDescriptor_ != ai.pkr.metabots.remote.Protocol.DeckDescriptor.getDefaultInstance()) {
          result.deckDescriptor_ =
            ai.pkr.metabots.remote.Protocol.DeckDescriptor.newBuilder(result.deckDescriptor_).mergeFrom(value).buildPartial();
        } else {
          result.deckDescriptor_ = value;
        }
        result.hasDeckDescriptor = true;
        return this;
      }
      public Builder clearDeckDescriptor() {
        result.hasDeckDescriptor = false;
        result.deckDescriptor_ = ai.pkr.metabots.remote.Protocol.DeckDescriptor.getDefaultInstance();
        return this;
      }
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.internalForceInit();
    }
  }
  
  public static final class PlayerInfo extends
      com.google.protobuf.GeneratedMessage {
    // Use PlayerInfo.newBuilder() to construct.
    private PlayerInfo() {}
    
    private static final PlayerInfo defaultInstance = new PlayerInfo();
    public static PlayerInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public PlayerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_PlayerInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_PlayerInfo_fieldAccessorTable;
    }
    
    // required string Name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    public final boolean isInitialized() {
      if (!hasName) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasName()) {
        output.writeString(1, getName());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.PlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ai.pkr.metabots.remote.Protocol.PlayerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private ai.pkr.metabots.remote.Protocol.PlayerInfo result;
      
      // Construct using ai.pkr.metabots.remote.Protocol.PlayerInfo.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new ai.pkr.metabots.remote.Protocol.PlayerInfo();
        return builder;
      }
      
      protected ai.pkr.metabots.remote.Protocol.PlayerInfo internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new ai.pkr.metabots.remote.Protocol.PlayerInfo();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ai.pkr.metabots.remote.Protocol.PlayerInfo.getDescriptor();
      }
      
      public ai.pkr.metabots.remote.Protocol.PlayerInfo getDefaultInstanceForType() {
        return ai.pkr.metabots.remote.Protocol.PlayerInfo.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public ai.pkr.metabots.remote.Protocol.PlayerInfo build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private ai.pkr.metabots.remote.Protocol.PlayerInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public ai.pkr.metabots.remote.Protocol.PlayerInfo buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        ai.pkr.metabots.remote.Protocol.PlayerInfo returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ai.pkr.metabots.remote.Protocol.PlayerInfo) {
          return mergeFrom((ai.pkr.metabots.remote.Protocol.PlayerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ai.pkr.metabots.remote.Protocol.PlayerInfo other) {
        if (other == ai.pkr.metabots.remote.Protocol.PlayerInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setName(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string Name = 1;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.internalForceInit();
    }
  }
  
  public static final class IPlayer_OnServerDisconnect extends
      com.google.protobuf.GeneratedMessage {
    // Use IPlayer_OnServerDisconnect.newBuilder() to construct.
    private IPlayer_OnServerDisconnect() {}
    
    private static final IPlayer_OnServerDisconnect defaultInstance = new IPlayer_OnServerDisconnect();
    public static IPlayer_OnServerDisconnect getDefaultInstance() {
      return defaultInstance;
    }
    
    public IPlayer_OnServerDisconnect getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_IPlayer_OnServerDisconnect_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_IPlayer_OnServerDisconnect_fieldAccessorTable;
    }
    
    // required string Reason = 1;
    public static final int REASON_FIELD_NUMBER = 1;
    private boolean hasReason;
    private java.lang.String reason_ = "";
    public boolean hasReason() { return hasReason; }
    public java.lang.String getReason() { return reason_; }
    
    public final boolean isInitialized() {
      if (!hasReason) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasReason()) {
        output.writeString(1, getReason());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasReason()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getReason());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect result;
      
      // Construct using ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect();
        return builder;
      }
      
      protected ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect.getDescriptor();
      }
      
      public ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect getDefaultInstanceForType() {
        return ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect) {
          return mergeFrom((ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect other) {
        if (other == ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect.getDefaultInstance()) return this;
        if (other.hasReason()) {
          setReason(other.getReason());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setReason(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string Reason = 1;
      public boolean hasReason() {
        return result.hasReason();
      }
      public java.lang.String getReason() {
        return result.getReason();
      }
      public Builder setReason(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder clearReason() {
        result.hasReason = false;
        result.reason_ = getDefaultInstance().getReason();
        return this;
      }
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.internalForceInit();
    }
  }
  
  public static final class IPlayer_OnSessionBegin extends
      com.google.protobuf.GeneratedMessage {
    // Use IPlayer_OnSessionBegin.newBuilder() to construct.
    private IPlayer_OnSessionBegin() {}
    
    private static final IPlayer_OnSessionBegin defaultInstance = new IPlayer_OnSessionBegin();
    public static IPlayer_OnSessionBegin getDefaultInstance() {
      return defaultInstance;
    }
    
    public IPlayer_OnSessionBegin getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_IPlayer_OnSessionBegin_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_IPlayer_OnSessionBegin_fieldAccessorTable;
    }
    
    // required string sessionName = 1;
    public static final int SESSIONNAME_FIELD_NUMBER = 1;
    private boolean hasSessionName;
    private java.lang.String sessionName_ = "";
    public boolean hasSessionName() { return hasSessionName; }
    public java.lang.String getSessionName() { return sessionName_; }
    
    // required .ai.pkr.metabots.remote.GameDefinition gameDef = 2;
    public static final int GAMEDEF_FIELD_NUMBER = 2;
    private boolean hasGameDef;
    private ai.pkr.metabots.remote.Protocol.GameDefinition gameDef_ = ai.pkr.metabots.remote.Protocol.GameDefinition.getDefaultInstance();
    public boolean hasGameDef() { return hasGameDef; }
    public ai.pkr.metabots.remote.Protocol.GameDefinition getGameDef() { return gameDef_; }
    
    // required .ai.pkr.metabots.remote.Props sessionParameters = 3;
    public static final int SESSIONPARAMETERS_FIELD_NUMBER = 3;
    private boolean hasSessionParameters;
    private ai.pkr.metabots.remote.Protocol.Props sessionParameters_ = ai.pkr.metabots.remote.Protocol.Props.getDefaultInstance();
    public boolean hasSessionParameters() { return hasSessionParameters; }
    public ai.pkr.metabots.remote.Protocol.Props getSessionParameters() { return sessionParameters_; }
    
    public final boolean isInitialized() {
      if (!hasSessionName) return false;
      if (!hasGameDef) return false;
      if (!hasSessionParameters) return false;
      if (!getGameDef().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasSessionName()) {
        output.writeString(1, getSessionName());
      }
      if (hasGameDef()) {
        output.writeMessage(2, getGameDef());
      }
      if (hasSessionParameters()) {
        output.writeMessage(3, getSessionParameters());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasSessionName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSessionName());
      }
      if (hasGameDef()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGameDef());
      }
      if (hasSessionParameters()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSessionParameters());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin result;
      
      // Construct using ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin();
        return builder;
      }
      
      protected ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin.getDescriptor();
      }
      
      public ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin getDefaultInstanceForType() {
        return ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin) {
          return mergeFrom((ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin other) {
        if (other == ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin.getDefaultInstance()) return this;
        if (other.hasSessionName()) {
          setSessionName(other.getSessionName());
        }
        if (other.hasGameDef()) {
          mergeGameDef(other.getGameDef());
        }
        if (other.hasSessionParameters()) {
          mergeSessionParameters(other.getSessionParameters());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setSessionName(input.readString());
              break;
            }
            case 18: {
              ai.pkr.metabots.remote.Protocol.GameDefinition.Builder subBuilder = ai.pkr.metabots.remote.Protocol.GameDefinition.newBuilder();
              if (hasGameDef()) {
                subBuilder.mergeFrom(getGameDef());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGameDef(subBuilder.buildPartial());
              break;
            }
            case 26: {
              ai.pkr.metabots.remote.Protocol.Props.Builder subBuilder = ai.pkr.metabots.remote.Protocol.Props.newBuilder();
              if (hasSessionParameters()) {
                subBuilder.mergeFrom(getSessionParameters());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSessionParameters(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string sessionName = 1;
      public boolean hasSessionName() {
        return result.hasSessionName();
      }
      public java.lang.String getSessionName() {
        return result.getSessionName();
      }
      public Builder setSessionName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSessionName = true;
        result.sessionName_ = value;
        return this;
      }
      public Builder clearSessionName() {
        result.hasSessionName = false;
        result.sessionName_ = getDefaultInstance().getSessionName();
        return this;
      }
      
      // required .ai.pkr.metabots.remote.GameDefinition gameDef = 2;
      public boolean hasGameDef() {
        return result.hasGameDef();
      }
      public ai.pkr.metabots.remote.Protocol.GameDefinition getGameDef() {
        return result.getGameDef();
      }
      public Builder setGameDef(ai.pkr.metabots.remote.Protocol.GameDefinition value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasGameDef = true;
        result.gameDef_ = value;
        return this;
      }
      public Builder setGameDef(ai.pkr.metabots.remote.Protocol.GameDefinition.Builder builderForValue) {
        result.hasGameDef = true;
        result.gameDef_ = builderForValue.build();
        return this;
      }
      public Builder mergeGameDef(ai.pkr.metabots.remote.Protocol.GameDefinition value) {
        if (result.hasGameDef() &&
            result.gameDef_ != ai.pkr.metabots.remote.Protocol.GameDefinition.getDefaultInstance()) {
          result.gameDef_ =
            ai.pkr.metabots.remote.Protocol.GameDefinition.newBuilder(result.gameDef_).mergeFrom(value).buildPartial();
        } else {
          result.gameDef_ = value;
        }
        result.hasGameDef = true;
        return this;
      }
      public Builder clearGameDef() {
        result.hasGameDef = false;
        result.gameDef_ = ai.pkr.metabots.remote.Protocol.GameDefinition.getDefaultInstance();
        return this;
      }
      
      // required .ai.pkr.metabots.remote.Props sessionParameters = 3;
      public boolean hasSessionParameters() {
        return result.hasSessionParameters();
      }
      public ai.pkr.metabots.remote.Protocol.Props getSessionParameters() {
        return result.getSessionParameters();
      }
      public Builder setSessionParameters(ai.pkr.metabots.remote.Protocol.Props value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSessionParameters = true;
        result.sessionParameters_ = value;
        return this;
      }
      public Builder setSessionParameters(ai.pkr.metabots.remote.Protocol.Props.Builder builderForValue) {
        result.hasSessionParameters = true;
        result.sessionParameters_ = builderForValue.build();
        return this;
      }
      public Builder mergeSessionParameters(ai.pkr.metabots.remote.Protocol.Props value) {
        if (result.hasSessionParameters() &&
            result.sessionParameters_ != ai.pkr.metabots.remote.Protocol.Props.getDefaultInstance()) {
          result.sessionParameters_ =
            ai.pkr.metabots.remote.Protocol.Props.newBuilder(result.sessionParameters_).mergeFrom(value).buildPartial();
        } else {
          result.sessionParameters_ = value;
        }
        result.hasSessionParameters = true;
        return this;
      }
      public Builder clearSessionParameters() {
        result.hasSessionParameters = false;
        result.sessionParameters_ = ai.pkr.metabots.remote.Protocol.Props.getDefaultInstance();
        return this;
      }
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.internalForceInit();
    }
  }
  
  public static final class IPlayer_GameString extends
      com.google.protobuf.GeneratedMessage {
    // Use IPlayer_GameString.newBuilder() to construct.
    private IPlayer_GameString() {}
    
    private static final IPlayer_GameString defaultInstance = new IPlayer_GameString();
    public static IPlayer_GameString getDefaultInstance() {
      return defaultInstance;
    }
    
    public IPlayer_GameString getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_IPlayer_GameString_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.pkr.metabots.remote.Protocol.internal_static_ai_pkr_metabots_remote_IPlayer_GameString_fieldAccessorTable;
    }
    
    // required string GameString = 1;
    public static final int GAMESTRING_FIELD_NUMBER = 1;
    private boolean hasGameString;
    private java.lang.String gameString_ = "";
    public boolean hasGameString() { return hasGameString; }
    public java.lang.String getGameString() { return gameString_; }
    
    public final boolean isInitialized() {
      if (!hasGameString) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (hasGameString()) {
        output.writeString(1, getGameString());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasGameString()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getGameString());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeDelimitedFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static ai.pkr.metabots.remote.Protocol.IPlayer_GameString parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(ai.pkr.metabots.remote.Protocol.IPlayer_GameString prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private ai.pkr.metabots.remote.Protocol.IPlayer_GameString result;
      
      // Construct using ai.pkr.metabots.remote.Protocol.IPlayer_GameString.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new ai.pkr.metabots.remote.Protocol.IPlayer_GameString();
        return builder;
      }
      
      protected ai.pkr.metabots.remote.Protocol.IPlayer_GameString internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new ai.pkr.metabots.remote.Protocol.IPlayer_GameString();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ai.pkr.metabots.remote.Protocol.IPlayer_GameString.getDescriptor();
      }
      
      public ai.pkr.metabots.remote.Protocol.IPlayer_GameString getDefaultInstanceForType() {
        return ai.pkr.metabots.remote.Protocol.IPlayer_GameString.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public ai.pkr.metabots.remote.Protocol.IPlayer_GameString build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private ai.pkr.metabots.remote.Protocol.IPlayer_GameString buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public ai.pkr.metabots.remote.Protocol.IPlayer_GameString buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        ai.pkr.metabots.remote.Protocol.IPlayer_GameString returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ai.pkr.metabots.remote.Protocol.IPlayer_GameString) {
          return mergeFrom((ai.pkr.metabots.remote.Protocol.IPlayer_GameString)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(ai.pkr.metabots.remote.Protocol.IPlayer_GameString other) {
        if (other == ai.pkr.metabots.remote.Protocol.IPlayer_GameString.getDefaultInstance()) return this;
        if (other.hasGameString()) {
          setGameString(other.getGameString());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setGameString(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string GameString = 1;
      public boolean hasGameString() {
        return result.hasGameString();
      }
      public java.lang.String getGameString() {
        return result.getGameString();
      }
      public Builder setGameString(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasGameString = true;
        result.gameString_ = value;
        return this;
      }
      public Builder clearGameString() {
        result.hasGameString = false;
        result.gameString_ = getDefaultInstance().getGameString();
        return this;
      }
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.getDescriptor();
    }
    
    static {
      ai.pkr.metabots.remote.Protocol.internalForceInit();
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ai_pkr_metabots_remote_Props_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ai_pkr_metabots_remote_Props_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ai_pkr_metabots_remote_PokerAction_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ai_pkr_metabots_remote_PokerAction_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ai_pkr_metabots_remote_DeckDescriptor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ai_pkr_metabots_remote_DeckDescriptor_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ai_pkr_metabots_remote_GameDefinition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ai_pkr_metabots_remote_GameDefinition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ai_pkr_metabots_remote_PlayerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ai_pkr_metabots_remote_PlayerInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ai_pkr_metabots_remote_IPlayer_OnServerDisconnect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ai_pkr_metabots_remote_IPlayer_OnServerDisconnect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ai_pkr_metabots_remote_IPlayer_OnSessionBegin_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ai_pkr_metabots_remote_IPlayer_OnSessionBegin_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_ai_pkr_metabots_remote_IPlayer_GameString_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ai_pkr_metabots_remote_IPlayer_GameString_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016Protocol.proto\022\026ai.pkr.metabots.remote" +
      "\"&\n\005Props\022\r\n\005Names\030\001 \003(\t\022\016\n\006Values\030\002 \003(\t" +
      "\"h\n\013PokerAction\022(\n\004Kind\030\001 \002(\0162\032.ai.pkr.m" +
      "etabots.remote.Ak\022\020\n\010Position\030\002 \002(\021\022\016\n\006A" +
      "mount\030\003 \002(\001\022\r\n\005Cards\030\004 \002(\t\"C\n\016DeckDescri" +
      "ptor\022\014\n\004Name\030\001 \002(\t\022\021\n\tCardNames\030\002 \003(\t\022\020\n" +
      "\010CardSets\030\003 \003(\004\"\226\003\n\016GameDefinition\022\014\n\004Na" +
      "me\030\001 \002(\t\022\023\n\013RoundsCount\030\002 \002(\021\022\022\n\nMinPlay" +
      "ers\030\003 \002(\021\022\022\n\nMaxPlayers\030\004 \002(\021\022\024\n\014BetStru" +
      "cture\030\005 \003(\001\022\026\n\016BlindStructure\030\006 \003(\001\022\031\n\021P",
      "rivateCardsCount\030\007 \003(\021\022\030\n\020PublicCardsCou" +
      "nt\030\010 \003(\021\022\030\n\020SharedCardsCount\030\t \003(\021\022\027\n\017Be" +
      "tsCountLimits\030\n \003(\021\022\022\n\nFirstActor\030\013 \003(\021\022" +
      "\031\n\021FirstActorHeadsUp\030\014 \003(\021\0224\n\tLimitKind\030" +
      "\r \002(\0162!.ai.pkr.metabots.remote.LimitKind" +
      "\022>\n\016DeckDescriptor\030\016 \002(\0132&.ai.pkr.metabo" +
      "ts.remote.DeckDescriptor\"\032\n\nPlayerInfo\022\014" +
      "\n\004Name\030\001 \002(\t\",\n\032IPlayer_OnServerDisconne" +
      "ct\022\016\n\006Reason\030\001 \002(\t\"\240\001\n\026IPlayer_OnSession" +
      "Begin\022\023\n\013sessionName\030\001 \002(\t\0227\n\007gameDef\030\002 ",
      "\002(\0132&.ai.pkr.metabots.remote.GameDefinit" +
      "ion\0228\n\021sessionParameters\030\003 \002(\0132\035.ai.pkr." +
      "metabots.remote.Props\"(\n\022IPlayer_GameStr" +
      "ing\022\022\n\nGameString\030\001 \002(\t*\'\n\002Ak\022\005\n\001b\020\000\022\005\n\001" +
      "d\020\001\022\005\n\001f\020\002\022\005\n\001c\020\003\022\005\n\001r\020\004*6\n\tLimitKind\022\016\n" +
      "\nFixedLimit\020\000\022\014\n\010PotLimit\020\001\022\013\n\007NoLimit\020\002" +
      "*\260\001\n\023IPlayer_FunctionIDs\022\023\n\017OnServerConn" +
      "ect\020\001\022\026\n\022OnServerDisconnect\020\002\022\022\n\016OnSessi" +
      "onBegin\020\003\022\020\n\014OnSessionEnd\020\004\022\017\n\013OnGameBeg" +
      "in\020\005\022\020\n\014OnGameUpdate\020\006\022\024\n\020OnActionRequir",
      "ed\020\007\022\r\n\tOnGameEnd\020\010"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_ai_pkr_metabots_remote_Props_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_ai_pkr_metabots_remote_Props_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ai_pkr_metabots_remote_Props_descriptor,
              new java.lang.String[] { "Names", "Values", },
              ai.pkr.metabots.remote.Protocol.Props.class,
              ai.pkr.metabots.remote.Protocol.Props.Builder.class);
          internal_static_ai_pkr_metabots_remote_PokerAction_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_ai_pkr_metabots_remote_PokerAction_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ai_pkr_metabots_remote_PokerAction_descriptor,
              new java.lang.String[] { "Kind", "Position", "Amount", "Cards", },
              ai.pkr.metabots.remote.Protocol.PokerAction.class,
              ai.pkr.metabots.remote.Protocol.PokerAction.Builder.class);
          internal_static_ai_pkr_metabots_remote_DeckDescriptor_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_ai_pkr_metabots_remote_DeckDescriptor_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ai_pkr_metabots_remote_DeckDescriptor_descriptor,
              new java.lang.String[] { "Name", "CardNames", "CardSets", },
              ai.pkr.metabots.remote.Protocol.DeckDescriptor.class,
              ai.pkr.metabots.remote.Protocol.DeckDescriptor.Builder.class);
          internal_static_ai_pkr_metabots_remote_GameDefinition_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_ai_pkr_metabots_remote_GameDefinition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ai_pkr_metabots_remote_GameDefinition_descriptor,
              new java.lang.String[] { "Name", "RoundsCount", "MinPlayers", "MaxPlayers", "BetStructure", "BlindStructure", "PrivateCardsCount", "PublicCardsCount", "SharedCardsCount", "BetsCountLimits", "FirstActor", "FirstActorHeadsUp", "LimitKind", "DeckDescriptor", },
              ai.pkr.metabots.remote.Protocol.GameDefinition.class,
              ai.pkr.metabots.remote.Protocol.GameDefinition.Builder.class);
          internal_static_ai_pkr_metabots_remote_PlayerInfo_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_ai_pkr_metabots_remote_PlayerInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ai_pkr_metabots_remote_PlayerInfo_descriptor,
              new java.lang.String[] { "Name", },
              ai.pkr.metabots.remote.Protocol.PlayerInfo.class,
              ai.pkr.metabots.remote.Protocol.PlayerInfo.Builder.class);
          internal_static_ai_pkr_metabots_remote_IPlayer_OnServerDisconnect_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_ai_pkr_metabots_remote_IPlayer_OnServerDisconnect_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ai_pkr_metabots_remote_IPlayer_OnServerDisconnect_descriptor,
              new java.lang.String[] { "Reason", },
              ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect.class,
              ai.pkr.metabots.remote.Protocol.IPlayer_OnServerDisconnect.Builder.class);
          internal_static_ai_pkr_metabots_remote_IPlayer_OnSessionBegin_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_ai_pkr_metabots_remote_IPlayer_OnSessionBegin_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ai_pkr_metabots_remote_IPlayer_OnSessionBegin_descriptor,
              new java.lang.String[] { "SessionName", "GameDef", "SessionParameters", },
              ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin.class,
              ai.pkr.metabots.remote.Protocol.IPlayer_OnSessionBegin.Builder.class);
          internal_static_ai_pkr_metabots_remote_IPlayer_GameString_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_ai_pkr_metabots_remote_IPlayer_GameString_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_ai_pkr_metabots_remote_IPlayer_GameString_descriptor,
              new java.lang.String[] { "GameString", },
              ai.pkr.metabots.remote.Protocol.IPlayer_GameString.class,
              ai.pkr.metabots.remote.Protocol.IPlayer_GameString.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
}
