/***************************************************************************   Copyright (c) 2000:         University of Alberta,         Deptartment of Computing Science         Computer Poker Research Group         See "Liscence.txt"***************************************************************************/package poker.online;import poker.util.*;import java.io.*;/** *	Wrapper for sending standard message packages. * *	@author  Aaron Davidson <davidson@cs.ualberta.ca> *	@version 1.0.0		 */public class Message {		private ByteArray data = null;	/**	 * Write a message to a Portal.	 * @param ID the message ID	 * @param msg the message data	 * @param p where to write the message to	 * @return an error code (0 = no error)	 */	public synchronized static int writeMessage(int ID, ByteArray msg, Portal p) {		try {			p.writeInt(ID);			p.writeInt(msg.size());			p.writeBytes(msg.getBytes());		} catch (IOException ie) {			System.out.println("[Message.writeMessage()] " + ie.getMessage());			return -1;		}		return 0;	}			/**	 * Write a message to a Portal.	 * @param ID the message ID	 * @param p where to write the message to	 * @return an error code (0 = no error)	 */	public synchronized static int writeMessage(int ID, Portal p) {		try {			p.writeInt(ID);			p.writeInt(0);		} catch (IOException ie) {			System.out.println("[Message.writeMessage()] " + ie.getMessage());			return -1;		}		return 0;	}		/**	 * Read a message off the portal.	 * If message is read successfully, 	 * then use getMessageData() to obtain the message data.	 * @param p the Portal to read from	 * @return either the message ID, or a negative number signifiying an error code	 */	public synchronized int readMessage(Portal p) {		try {			int ID = p.readInt();			int size = p.readInt();			if (size < 0) return -1;			data = new ByteArray(size);			for (int i=0;i<size;i++) {				int n = p.readByte();				if (n == -1) return -1;				data.append((byte)n);			}			return ID;		} catch (IOException ie) {			System.out.println("[Message.readMessage()] " + ie.getMessage());			return -1;		}	}				/**	 * If a message has been read, this will return the data of the last message read.	 * @return the data.	 */	public synchronized ByteArray getMessageData() {		return data;	}}