/***************************************************************************   Copyright (c) 2000:         University of Alberta,         Deptartment of Computing Science         Computer Poker Research Group         See "Liscence.txt"***************************************************************************/package poker.ai.model;import poker.*;import poker.ai.*;                      import java.io.*;public class ContextItem implements Serializable {	public static final int NUM_ACTIONS = 40;	private int[]  	acts = new int[NUM_ACTIONS];	private int[]  	freqs = new int[3];	private int 		size, top, num_default;	private String 	label;	public ContextItem(String label) {		this.label = label;		top = 0;		size = 0;	}		public String getLabel() {		return label;	}	public void addAction(int a) {		if (size >= NUM_ACTIONS) 			freqs[acts[top]]--; 		acts[top] = a;		freqs[a]++;		top = (top+1) % NUM_ACTIONS;		if (size < NUM_ACTIONS) size++;	}	public ProbTriple getFrequency() {		//if (size < NUM_ACTIONS/2)		//	return new ProbTriple(0,0,0);		return new ProbTriple(freqs[0]/(double)size, freqs[1]/(double)size, freqs[2]/(double)size);	}	public double getFrequency(int a) {		return freqs[a]/(double)size;	}	public int getSize() { return size; }	}